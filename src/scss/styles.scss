@use "sass:map";
@use "sass:math";
@import "bootstrap/scss/bootstrap";

.keyicon {
    @extend .text-center;
    min-width: 32px;
}

.font-native {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

$background-base: #282b30;

$background: lighten($background-base, 0%);
$background-input: darken($background-base, 4%);
$input-border: darken($background-input, 8%);

$background-button: lighten($background-input, 24%);
$button-border: lighten($background-input, 16%);

$embed-bar-color: lighten($background-base, 8%);

$background-input-group: darken($background-base, 0%);
$background-input-group-text: lighten($background-input-group, 8%);
$text-input-border: $secondary;


.console {
    background-color: $background;
    max-width: 100vw !important;

    .console-output {
        @extend .font-monospace;
        // @extend .font-native;
        @extend .py-4;
        @extend .px-4;
        font-size: 12pt;
        max-width: 100vw !important;
        overflow-y: scroll;
        overflow-wrap: break-word;
    }
    
    .console-input {
        border-top-style: solid;
        border-top-width: 1px;
        border-top-color: $input-border;
        background-color: $background-input;

        .input-group {
            input {
                @extend .font-monospace;
            }
        }

        .menu-item {
            @extend .font-monospace;
            min-width: 64px;

            .btn {
                @extend .bold;
                @extend .text-capitalize;
                padding: 0.25rem;
                min-height: 32px;
                min-width: 32px;
                line-height: 80%;

                font-size: 14pt;
                border-color: $button-border;
                border-width: 1px;
                background-color: $background-button;
                border-bottom-width: 4px;
            }

            .btn:hover {
                background-color: $background-button;
                border-bottom-width: 5px;
            }

            .btn:active, .btn-click {
                transform: translateY(2px);
                border-bottom-width: 1px;
            }
        }
    }
}

@keyframes glitch{
    2%,64%{
      transform: translate(2px,0) skew(0deg);
    }
    4%,60%{
      transform: translate(-2px,0) skew(0deg);
    }
    62%{
      transform: translate(0,0) skew(5deg); 
    }
  }

.console {
    .text-subtle {
        font-weight: lighter;
        opacity: .75;
    }

    .text-glitch {
        display: inline-block;
    }

    .bold {
        @extend .fw-bold;
    }
    
    .italic {
        @extend .fst-italic;
    }

    .text {
        @extend .font-monospace;
    }

    .embed {
        @extend .font-native;
        @extend .my-1;
        @extend .ps-3;
        @extend .ms-1;
        border-left: solid;
        border-color: $embed-bar-color;
        border-width: 2px;
    }

    .chapter-title {
        @extend .font-native;
    }

    .invisable {
        visibility: hidden;
    }
}

.console.console-server {
    .console-output {
        font-size: 10pt;
    }

    .debug-entity {
        font-weight: bold;
        color: $blue-100;
    }
    
    .debug-object {
        font-weight: bold;
        color: $yellow-100;
    }
}

$color-object: #ff4876;
$value: 16%;
$color: -12deg;

$archetype-colors: (
    'room': #80ff8b,
    'npc': #aa66ff,
    'player': #66aaff,
    'prop': adjust-color($color: $color-object, $lightness: $value),
    'item': adjust-color($color: $color-object),
    'chest': adjust-color($color: $color-object, $hue: $color, $lightness: $value),
    'backpack': adjust-color($color: $color-object, $hue: $color),
);

.console.console-client {
    .proper-noun {
        @extend .font-monospace;
        // @extend .bold;
        text-transform: capitalize;
    }
    .proper-noun:first-letter {
        text-transform: uppercase;
    }
    .proper-noun.first-person {
        color: #ffc64b;
        font-style: italic;
    }
    .proper-noun.player {
        font-style: italic;
    }
    .proper-noun.npc {
        font-style: italic;
    }

    @each $archetype, $color in $archetype-colors {
        .proper-noun.#{$archetype} {
            color: $color;
        }
    }
}

body {
    background-color: $background;
}

.jumbo {
    background-color: darken($background-base, 8%);

    .btn-start {
        border-color: darken($primary, 16%);
        border-width: 1px;
        border-bottom-width: 4px;

        $outline-blur: 2px;
        $outline-color: rgba(0,0,0,0.2);

        text-shadow:
            1px 1px $outline-blur $outline-color,
            1px -1px $outline-blur $outline-color,
            -1px 1px $outline-blur $outline-color,
            -1px -1px $outline-blur $outline-color;
    }

    .btn-start:active {
        transform: translateY(2px);
        border-bottom-width: 1px;
    }

    .btn-start:hover {
        background-color: lighten($primary, 4%);
    }
}

.host {
    background-color: $background-base;

    .list-group {
        background-color: darken($background-base, 4%);
        
        .list-group-item {
            background-color: inherit;
            color: inherit;
        }
    }

    .text-subtle {
        font-weight: lighter;
        opacity: .75;
    }

    .dropzone {
        @extend .p-4;
        @extend .mt-4;

        border-radius: 16px;
        border-style: solid;
        border-color: darken($background-base, 8%);
        border-width: 1px;

        background-color: darken($background-base, 4%);
    }

    .savelist {
        @extend .mt-4;
        min-height: 128px;
    }

    .link {
        user-select: all;
        white-space: nowrap;
        overflow: hidden;
    }

    $enable: lighten($background-base, 8%);
    $disable: darken($background-base, 4%);
    $focus: lighten($background-base, 16%);

    .tree {
        @extend .font-monospace;
        @extend .p-4;
        color: white;
        background-color: $background-base;
        width: 100%;
        height: 100%;
        overflow-y: scroll;

        .treenode {
            user-select: none;
        }

        .treenode > {
            div {
                display: flex;
                flex-direction: row;

                align-items: stretch;
                justify-content: stretch;

                .indent {
                    display: flex;
                    flex-direction: column;

                    justify-content: center;

                    width: 24px;
                    margin-right: 6px;
                }

                .indent::before {
                    height: calc(100% - 4px);

                    border-width: 2px;
                    border-color: lighten($background-base, 8%);
                    border-right-style: solid;
                    content: '';
                }
            }
            
            .treenode-handle {
                @extend .mx-1;
            }

            .treenode-handle:hover {
                border-radius: 4px;
                background-color: $focus;
            }

            .treenode-handle > .treenode-name {
                @extend .px-2;
                border-radius: 4px;
            }

            .treenode-type {
                @extend .px-2;
                display: none;
            }
        }
    }

    @each $archetype, $color in $archetype-colors {
        .treenode[archetype=#{$archetype}] > {
            .treenode-type {
                display: unset;
                color: $color;
                opacity: 0.5;
            }

            .treenode-handle > .treenode-name {
                background-color: $disable;
            }
    
            .treenode-handle.grabbable > .treenode-name {
                background-color: $enable;
            }

            .treenode-handle:hover > .treenode-name {
                background-color: $focus;
            }
        }

        .drag-active .treenode[archetype=#{$archetype}] > {
            .treenode-handle > .treenode-name {
                background-color: unset;
            }
        }

        .drag-active .treenode[archetype=#{$archetype}].tree-dropzone > {
            .treenode-handle > .treenode-name {
                background-color: $enable;
            }
        }
    }

    .scroll {
        overflow-y: scroll;
    }

    .component-text {
        @extend .px-1;
        width: 100%;
        border: none;
    }

    .component-text:focus {
    }
}

.input {
    color: white;
    background-color: $background-input-group;
    border-color: $text-input-border;
}

input[type="text"], input[type="password"] {
    @extend .py-0;
    @extend .input;
}

input:focus[type="text"], input:focus[type="password"] {
    @extend .input;
}

.input-group {
    .input-group-text {
        color: darken(white, 16%);
        background-color: $background-input-group-text;
        border-color: $text-input-border;
    }
}

.grabbable {
    cursor: move;
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
}